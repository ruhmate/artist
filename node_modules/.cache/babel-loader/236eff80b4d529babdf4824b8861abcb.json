{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ArtistsProject\\\\src\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst artistUrl = 'https://rest.bandsintown.com/artists';\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [artistts, setArtists] = useState([]);\n  const fetchArtists = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      // const response = await fetch(`${url}${searchTerm}`)\n      const response = await fetch(`${artistUrl}/${searchTerm}/?app_id=asd`);\n      const data = await response.json();\n      debugger;\n      console.log(data);\n      const artistData = data;\n\n      if (artistData) {\n        const events = [];\n        const eventsResponse = await fetch(`${artistUrl}/${searchTerm}/events?app_id=test&date=all`);\n        const eventData = await eventsResponse.json();\n\n        if (eventData) {\n          eventData.map(item => {\n            let event = {\n              name: item.venue.name,\n              country: item.venue.country,\n              city: item.venue.city,\n              date: item.datetime\n            };\n            events.push(event);\n          });\n        }\n\n        const artist = [{\n          id: 1,\n          name: artistData.name,\n          image: artistData.image_url,\n          tracker: artistData.tracker_count,\n          id: artistData.id,\n          count: artistData.upcoming_event_count,\n          events: events\n        }];\n        setArtists(artist);\n      } else {\n        setArtists([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchArtists();\n  }, [searchTerm, fetchArtists]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      artistts,\n      searchTerm,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n\n_s(AppProvider, \"rOY5tG3BfmSqi1f+zsl6wSKLgtw=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/ArtistsProject/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","artistUrl","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","artistts","setArtists","fetchArtists","response","fetch","data","json","console","log","artistData","events","eventsResponse","eventData","map","item","event","name","venue","country","city","date","datetime","push","artist","id","image","image_url","tracker","tracker_count","count","upcoming_event_count","error","useGlobalContext"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { useCallback } from 'react'\r\n\r\n\r\nconst artistUrl = 'https://rest.bandsintown.com/artists'\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [searchTerm, setSearchTerm] = useState('a')\r\n  const [artistts, setArtists] = useState([])\r\n\r\n  const fetchArtists = useCallback( async () => {\r\n    setLoading(true)\r\n    try {\r\n      // const response = await fetch(`${url}${searchTerm}`)\r\n      const response = await fetch(`${artistUrl}/${searchTerm}/?app_id=asd`)\r\n      \r\n\r\n      const data = await response.json()\r\n      debugger;\r\n      console.log(data);\r\n      const artistData = data\r\n      if (artistData) {\r\n        const events = [];\r\n        const eventsResponse = await fetch(`${artistUrl}/${searchTerm}/events?app_id=test&date=all`)\r\n        const eventData = await eventsResponse.json()\r\n        if(eventData){\r\n          eventData.map((item) => {\r\n            let event = {\r\n              name : item.venue.name,\r\n              country: item.venue.country,\r\n              city : item.venue.city,\r\n              date : item.datetime,\r\n            }\r\n            events.push(event);\r\n          });\r\n        }\r\n        \r\n        const artist = [{\r\n              id: 1,\r\n              name: artistData.name,\r\n              image: artistData.image_url,\r\n              tracker: artistData.tracker_count,\r\n              id: artistData.id,\r\n              count: artistData.upcoming_event_count,\r\n              events: events\r\n            }];\r\n        setArtists(artist)\r\n      } else {\r\n        setArtists([])\r\n      }\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoading(false)\r\n    }\r\n  },[searchTerm])\r\n  useEffect(() => {\r\n    fetchArtists()\r\n  }, [searchTerm,fetchArtists])\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ loading, artistts, searchTerm, setSearchTerm }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }"]},"metadata":{},"sourceType":"module"}